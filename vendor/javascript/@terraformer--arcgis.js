// @terraformer/arcgis@2.1.2 downloaded from https://ga.jspm.io/npm:@terraformer/arcgis@2.1.2/dist/t-arcgis.esm.js

/* @preserve
* @terraformer/arcgis - v2.1.1 - MIT
* Copyright (c) 2012-2022 Environmental Systems Research Institute, Inc.
* Tue Aug 02 2022 14:23:48 GMT-0700 (Pacific Daylight Time)
*/
var e=function edgeIntersectsEdge(e,r,t,n){var a=(n[0]-t[0])*(e[1]-t[1])-(n[1]-t[1])*(e[0]-t[0]);var o=(r[0]-e[0])*(e[1]-t[1])-(r[1]-e[1])*(e[0]-t[0]);var i=(n[1]-t[1])*(r[0]-e[0])-(n[0]-t[0])*(r[1]-e[1]);if(0!==i){var s=a/i;var l=o/i;if(s>=0&&s<=1&&l>=0&&l<=1)return true}return false};var r=function coordinatesContainPoint(e,r){var t=false;for(var n=-1,a=e.length,o=a-1;++n<a;o=n)(e[n][1]<=r[1]&&r[1]<e[o][1]||e[o][1]<=r[1]&&r[1]<e[n][1])&&r[0]<(e[o][0]-e[n][0])*(r[1]-e[n][1])/(e[o][1]-e[n][1])+e[n][0]&&(t=!t);return t};var t=function pointsEqual(e,r){for(var t=0;t<e.length;t++)if(e[t]!==r[t])return false;return true};var n=function arrayIntersectsArray(r,t){for(var n=0;n<r.length-1;n++)for(var a=0;a<t.length-1;a++)if(e(r[n],r[n+1],t[a],t[a+1]))return true;return false};var a=function closeRing(e){t(e[0],e[e.length-1])||e.push(e[0]);return e};var o=function ringIsClockwise(e){var r=0;var t=0;var n=e.length;var a=e[t];var o;for(t;t<n-1;t++){o=e[t+1];r+=(o[0]-a[0])*(o[1]+a[1]);a=o}return r>=0};var i=function shallowClone(e){var r={};for(var t in e)e.hasOwnProperty(t)&&(r[t]=e[t]);return r};var s=function coordinatesContainCoordinates(e,t){var a=n(e,t);var o=r(e,t[0]);return!(a||!o)};var l=function convertRingsToGeoJSON(e){var r=[];var t=[];var i;var l;var u;for(var c=0;c<e.length;c++){var f=a(e[c].slice(0));if(!(f.length<4))if(o(f)){var v=[f.slice().reverse()];r.push(v)}else t.push(f.slice().reverse())}var g=[];while(t.length){u=t.pop();var p=false;for(i=r.length-1;i>=0;i--){l=r[i][0];if(s(l,u)){r[i].push(u);p=true;break}}p||g.push(u)}while(g.length){u=g.pop();var h=false;for(i=r.length-1;i>=0;i--){l=r[i][0];if(n(l,u)){r[i].push(u);h=true;break}}h||r.push([u.reverse()])}return 1===r.length?{type:"Polygon",coordinates:r[0]}:{type:"MultiPolygon",coordinates:r}};var u=function getId(e,r){var t=r?[r,"OBJECTID","FID"]:["OBJECTID","FID"];for(var n=0;n<t.length;n++){var a=t[n];if(a in e&&("string"===typeof e[a]||"number"===typeof e[a]))return e[a]}throw Error("No valid id attribute found")};var c=function arcgisToGeoJSON(e,r){var t={};if(e.features){t.type="FeatureCollection";t.features=[];for(var n=0;n<e.features.length;n++)t.features.push(arcgisToGeoJSON(e.features[n],r))}if("number"===typeof e.x&&"number"===typeof e.y){t.type="Point";t.coordinates=[e.x,e.y];"number"===typeof e.z&&t.coordinates.push(e.z)}if(e.points){t.type="MultiPoint";t.coordinates=e.points.slice(0)}if(e.paths)if(1===e.paths.length){t.type="LineString";t.coordinates=e.paths[0].slice(0)}else{t.type="MultiLineString";t.coordinates=e.paths.slice(0)}e.rings&&(t=l(e.rings.slice(0)));if("number"===typeof e.xmin&&"number"===typeof e.ymin&&"number"===typeof e.xmax&&"number"===typeof e.ymax){t.type="Polygon";t.coordinates=[[[e.xmax,e.ymax],[e.xmin,e.ymax],[e.xmin,e.ymin],[e.xmax,e.ymin],[e.xmax,e.ymax]]]}if(e.geometry||e.attributes){t.type="Feature";t.geometry=e.geometry?arcgisToGeoJSON(e.geometry):null;t.properties=e.attributes?i(e.attributes):null;if(e.attributes)try{t.id=u(e.attributes,r)}catch(e){}}JSON.stringify(t.geometry)===JSON.stringify({})&&(t.geometry=null);e.spatialReference&&e.spatialReference.wkid&&4326!==e.spatialReference.wkid&&console.warn("Object converted in non-standard crs - "+JSON.stringify(e.spatialReference));return t};var f=function orientRings(e){var r=[];var t=e.slice(0);var n=a(t.shift().slice(0));if(n.length>=4){o(n)||n.reverse();r.push(n);for(var i=0;i<t.length;i++){var s=a(t[i].slice(0));if(s.length>=4){o(s)&&s.reverse();r.push(s)}}}return r};var v=function flattenMultiPolygonRings(e){var r=[];for(var t=0;t<e.length;t++){var n=f(e[t]);for(var a=n.length-1;a>=0;a--){var o=n[a].slice(0);r.push(o)}}return r};var g=function geojsonToArcGIS(e,r){r=r||"OBJECTID";var t={wkid:4326};var n={};var a;switch(e.type){case"Point":n.x=e.coordinates[0];n.y=e.coordinates[1];null!=e.coordinates[2]&&(n.z=e.coordinates[2]);n.spatialReference=t;break;case"MultiPoint":n.points=e.coordinates.slice(0);null!=e.coordinates[0][2]&&(n.hasZ=true);n.spatialReference=t;break;case"LineString":n.paths=[e.coordinates.slice(0)];null!=e.coordinates[0][2]&&(n.hasZ=true);n.spatialReference=t;break;case"MultiLineString":n.paths=e.coordinates.slice(0);null!=e.coordinates[0][0][2]&&(n.hasZ=true);n.spatialReference=t;break;case"Polygon":n.rings=f(e.coordinates.slice(0));null!=e.coordinates[0][0][2]&&(n.hasZ=true);n.spatialReference=t;break;case"MultiPolygon":n.rings=v(e.coordinates.slice(0));null!=e.coordinates[0][0][0][2]&&(n.hasZ=true);n.spatialReference=t;break;case"Feature":e.geometry&&(n.geometry=geojsonToArcGIS(e.geometry,r));n.attributes=e.properties?i(e.properties):{};e.id&&(n.attributes[r]=e.id);break;case"FeatureCollection":n=[];for(a=0;a<e.features.length;a++)n.push(geojsonToArcGIS(e.features[a],r));break;case"GeometryCollection":n=[];for(a=0;a<e.geometries.length;a++)n.push(geojsonToArcGIS(e.geometries[a],r));break}return n};export{c as arcgisToGeoJSON,g as geojsonToArcGIS};


// tiny-binary-search@1.0.3 downloaded from https://ga.jspm.io/npm:tiny-binary-search@1.0.3/dist/binary-search-index.js

var e="undefined"!==typeof globalThis?globalThis:"undefined"!==typeof self?self:global;var t={};(function(e,r){t=r()})(t,(function(){function BinarySearchIndex(t){(this||e).values=[].concat(t||[])}BinarySearchIndex.prototype.query=function(t){var r=this.getIndex(t);return(this||e).values[r]};BinarySearchIndex.prototype.getIndex=function getIndex(t){(this||e).dirty&&this.sort();var r=0;var n=(this||e).values.length-1;var i;var a;while(r<=n){i=(r+n)/2|0;a=(this||e).values[Math.round(i)];if(+a.value<+t)r=i+1;else{if(!(+a.value>+t))return i;n=i-1}}return Math.abs(~n)};BinarySearchIndex.prototype.between=function between(t,r){var n=this.getIndex(t);var i=this.getIndex(r);if(0===n&&0===i)return[];while((this||e).values[n-1]&&(this||e).values[n-1].value===t)n--;while((this||e).values[i+1]&&(this||e).values[i+1].value===r)i++;(this||e).values[i]&&(this||e).values[i].value===r&&(this||e).values[i+1]&&i++;return(this||e).values.slice(n,i)};BinarySearchIndex.prototype.insert=function insert(t){(this||e).values.splice(this.getIndex(t.value),0,t);return this||e};BinarySearchIndex.prototype.bulkAdd=function bulkAdd(t,r){(this||e).values=(this||e).values.concat([].concat(t||[]));r?this.sort():(this||e).dirty=true;return this||e};BinarySearchIndex.prototype.sort=function sort(){(this||e).values.sort((function(e,t){return+t.value-+e.value})).reverse();(this||e).dirty=false;return this||e};return BinarySearchIndex}));var r=t;export default r;

